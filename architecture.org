* General Description

- 4 bit nibbles as processor word size
- 1 bit databus
- stack machine
  - stack is cleared on cycle start
  - code executes until a cycle start happens or the end of code memory is
    reached, in which case a new cycle is started
- When in reset, you can shift data into the code memory
- 8 input bits/registers mapped to pins
- 1 io bits/registers not mapped to a pin
- 8 io bits/registers mapped to pins
- 7 output bits/registers mapped to pins
- 1 error bit mapped to a pin
- X bit data stack (let's see how big it can be made?)
- X nibble code memory
- 1 8-bit timer/counter with clock divisor
- 1 main clock divisor (to take the system/instruction clock to a cycle clock)

* Opcodes

#+BEGIN_SRC
PUSH reg              0000 RRRR
POP  reg              0001 RRRR
SET  reg              0010 RRRR
RESET reg             0011 RRRR

SETUP reg             0100 RRRR IPFF I=input/output P=pullup F=Filter
SETUP CLOCK           0101 DDDD DDDD D=clock divisor
SETUP TIMER period    0110 PPPP PPPP P=period

SET TIMER reg mode    0111 RRRR 1MXX M=cycle/one-shot
RESET TIMER           0111 XXXX 0XXX

NOT                   1000
AND                   1001
OR                    1010
XOR                   1011
IMPL                  1100
BIMP                  1101
NAND                  1110 May change this, but not a bad placeholder

NOP                   1111
#+END_SRC

** Filter
  - 0 None
  - 1 Rising
  - 2 Faling
  - 3 Change

