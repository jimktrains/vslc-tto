* General Description

- Stack machine
  - Code executes until a cycle start happens or the end of code memory is
    reached, in which case a new cycle is started
- 8 input bits/registers mapped to pins
- 8 output bits/registers mapped to pins
- 16 bit data stack
- 1 10-bit timer/counter with clock divisor

* Opcodes

  ** Implemented

Bit 7,6:
      00: Register
      01: Register
      10: Truth Table
      11: Other
Bit 5,4:
    Register:
      00 Push
      01 Pop
      10 Set
      11 Reset
    Truth Table: 2s complement shift amount


#+BEGIN_SRC
PUSH io reg           0000 IRRR
POP  reg              0001 1RRR
SET  reg              0010 1RRR
RESET reg             0011 1RRR
POP TIMER             0001 0000
SET TIMER             0010 0000
RESET TIMER           0011 0000

nos          0011
tos          0101
           shift once
          shift twice
AND     1010 0001
NAND    1010 1110
OR      1010 0111
NOR     1010 1000
XOR     1010 0110
BICOND  1010 1001
IMPL    1010 1101
NIMPL   1010 0010
CONV    1010 1011
NCONV   1010 0100

DUP     1000 1100
OVER    1000 1010
DROP    1010 1010
ZERO    1000 0000
ONE     1000 1111
NOT     1001 0011
OVERNOT 1010 0101

CLR     1111 0000
SETALL  1111 0001
SWAP    1111 0010
ROT     1111 0011
NOP     1111 1111

TIMER PA period  0111 00PP PPPP PPPP P=period
TIMER PB period  0111 01PP PPPP PPPP P=period
TIMER M mode     0111 000M M=cycle/one-shot
TIMER CLOCKDIV D 0111 1DDD D=log2(clock divisor)-1

RISING     1110 0RRR
FALLING    1110 1RRR

#+END_SRC

* Instruction Cycle

  -
